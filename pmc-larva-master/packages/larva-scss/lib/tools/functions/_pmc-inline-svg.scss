@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		// Breaking these up into separate statements keeps the task from "freezing".
		$return: str-slice($string, 1, $index - 1);
		$return: $return + $replace;
		$replacement: str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
		@return $return + $replacement;
	}

	@return $string;
}

@function url-encode($string) {
	$map: (
		'%': '%25',
		' ': '%20',
		'<': '%3C',
		'>': '%3E',
		'!': '%21',
		'*': '%2A',
		'"': '%27',
		'(': '%28',
		')': '%29',
		';': '%3B',
		':': '%3A',
		'@': '%40',
		'&': '%26',
		'=': '%3D',
		'+': '%2B',
		'$': '%24',
		'/': '%2F',
		'?': '%3F',
		'#': '%23',
		'[': '%5B',
		']': '%5D'
		);
	$new: $string;

	@each $search, $replace in $map {
		$new: str-replace($new, $search, $replace);
	}

	@return $new;
}

@function pmc-inline-svg($string) {
	$url: url-encode($string);

	@return '"data:image/svg+xml;charset=US-ASCII,#{$url}"';
}